name: CI
on: pull_request
jobs:
  setup:
    name: Set Up
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper diff
    - name: Check for file changes
      id: changes
      run: |
        # Get the base ref for comparison
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          BASE_REF="${{ github.event.pull_request.base.sha }}"
        else
          BASE_REF="HEAD~1"
        fi

        # Check for changes in Brewfile
        if git diff --name-only "$BASE_REF" HEAD | grep -q '^Brewfile$'; then
          echo "brewfile_changed=true" >> $GITHUB_OUTPUT
          echo "Brewfile has changed"
        else
          echo "brewfile_changed=false" >> $GITHUB_OUTPUT
          echo "Brewfile has not changed"
        fi

        # Check for changes in .config/aqua/
        if git diff --name-only "$BASE_REF" HEAD | grep -q '^\.config/aqua/'; then
          echo "aqua_changed=true" >> $GITHUB_OUTPUT
          echo "Aqua config has changed"
        else
          echo "aqua_changed=false" >> $GITHUB_OUTPUT
          echo "Aqua config has not changed"
        fi
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install fish (required for tests)
      run: brew install fish
    - name: Install Homebrew packages
      if: steps.changes.outputs.brewfile_changed == 'true'
      run: make brew
    - name: Install Aqua packages
      if: steps.changes.outputs.aqua_changed == 'true'
      run: make aqua
    - name: Install dotfiles
      run: |
        echo "PR was created by: ${{ github.event.pull_request.user.login }}"
        make install
    - name: Test fish configuration
      run: |
        fish -c 'echo "Fish shell configuration test"'
        fish -c 'echo $PATH'
      # Test fish shell configuration
      shell: fish {0}
  status-check:
    runs-on: ubuntu-latest
    needs:
    - setup
    permissions: {}
    if: failure()
    steps:
    - run: exit 1
  enable-auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write # For enable automerge
      pull-requests: write # For enable automerge
    if: |
      github.event.pull_request.user.login == 'renovate[bot]' && contains(github.event.pull_request.body, ' **Automerge**: Enabled.')
    steps:
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2.1.0
      with:
        app_id: ${{secrets.GH_APP_ID}}
        private_key: ${{secrets.GH_APP_PRIVATE_KEY}}
    - run: gh -R "$GITHUB_REPOSITORY" pr merge --squash --auto --delete-branch "$PR_NUMBER"
      env:
        GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
        PR_NUMBER: ${{github.event.pull_request.number}}
