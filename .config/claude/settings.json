{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "cleanupPeriodDays": 7,
  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(cargo check:*)",
      "Bash(cargo clippy:*)",
      "Bash(cargo fmt:*)",
      "Bash(cargo test:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(gh pr view:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git status)",
      "Bash(go build:*)",
      "Bash(go fmt:*)",
      "Bash(go mod:*)",
      "Bash(go test:*)",
      "Bash(go vet:*)",
      "Bash(golangci-lint:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(ls:*)",
      "Bash(markdownlint:*)",
      "Bash(npm run format:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(make test:*)",
      "Bash(prettier:*)",
      "Bash(rg:*)",
      "Bash(shellcheck:*)",
      "Bash(shfmt:*)",
      "Bash(tail:*)",
      "Bash(yarn format:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn test:*)",
      "Glob",
      "Grep",
      "LS",
      "Read",
      "WebFetch(domain:doc.rust-lang.org)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:fluxcd.io)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_file",
      "mcp__filesystem__read_multiple_files",
      "mcp__github__get_file_contents",
      "mcp__github__get_issue",
      "mcp__github__get_issue_comments",
      "mcp__github__get_pull_request",
      "mcp__github__get_pull_request_files",
      "mcp__github__get_pull_request_reviews",
      "mcp__github__get_pull_request_status",
      "mcp__github__list_commits",
      "mcp__github__list_issues",
      "mcp__github__list_notifications",
      "mcp__github__list_pull_requests",
      "mcp__github__list_tags",
      "mcp__github__search_code",
      "mcp__github__search_issues",
      "mcp__serena__find_file",
      "mcp__serena__search_for_pattern",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__find_symbol"
    ],
    "deny": [
      "Read(~/.zshrc.local)"
    ]
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Glass.aiff"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Glass.aiff"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); printf \"%s:%s\" \"$(whoami)\" \"$(basename \"$(echo \"$input\" | jq -r '.workspace.current_dir')\")\" && if git rev-parse --git-dir >/dev/null 2>&1; then printf \" [%s]\" \"$(git branch --show-current 2>/dev/null || git rev-parse --short HEAD 2>/dev/null)\"; fi"
  },
  "alwaysThinkingEnabled": false,
  "feedbackSurveyState": {
    "lastShownTime": 1754061905187
  }
}
