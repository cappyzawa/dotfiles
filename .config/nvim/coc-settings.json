{
  "suggest.triggerAfterInsertEnter": true,
  "suggest.noselect": false,
  "suggest.minTriggerInputLength": 2,
  "suggest.acceptSuggestionOnCommitCharacter": true,
  "suggest.snippetIndicator": " ►",
  "suggest.enablePreview": true,
  "coc.preferences.hoverTarget": "float",
  "diagnostic.displayByAle": true,
  "codeLens.enable": false,
  "list.autoResize": true,
  "languageserver": {
    "golang": {
      "command": "gopls",
      "rootPatterns": [
        "go.mod",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "filetypes": [
        "go"
      ]
    },
    "elmLS": {
      "command": "elm-language-server",
      "trace.server": "verbose",
      "args": [
        "--stdio"
      ],
      "filetypes": [
        "elm"
      ],
      "rootPatterns": [
        "elm.json"
      ],
      "initializationOptions": {
        "elmAnalyseTrigger": "change"
      }
    },
    "vimls": {
      "command": "vim-language-server",
      "args": [
        "--stdio"
      ],
      "initializationOptions": {
        "iskeyword": "vim iskeyword option",
        "vimruntime": "$VIMRUNTIME",
        "runtimepath": false,
        "diagnostic": {
          "enable": false
        },
        "indexes": {
          "runtimepath": true,
          "gap": 100,
          "count": 3
        },
        "suggest": {
          "fromVimruntime": true,
          "fromRuntimepath": false
        }
      },
      "filetypes": [
        "vim"
      ]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": [
        "dockerfile"
      ],
      "args": [
        "--stdio"
      ]
    },
    "bash": {
      "command": "bash-language-server",
      "args": [
        "start"
      ],
      "filetypes": [
        "sh",
        "bash",
        "zsh"
      ],
      "ignoredRootPaths": []
    },
    "julia": {
      "command": "julia",
      "args": [
        "--startup-file=no",
        "--history-file=no",
        "-e",
        "using LanguageServer; using Pkg; import StaticLint; import SymbolServer; env_path = dirname(Pkg.Types.Context().env.project_file); debug = false; server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict()); server.runlinter = true; run(server);"
      ],
      "filetypes": [
        "julia"
      ]
    },
    "nim": {
      "command": "nimlsp",
      "args": [
        "~/.choosenim/toolchains/nim-0.20.2"
      ],
      "filetypes": [
        "nim"
      ]
    },
    "cquery": {
      "command": "cquery",
      "args": [
        "--log-file=/tmp/cq.log"
      ],
      "filetypes": [
        "c",
        "cpp"
      ],
      "rootPatterns": [
        "compile_flags.txt",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cacheDirectory": "/tmp/cquery"
      }
    }
  },
  "list.indicator": " ►",
  "list.insertMappings": {
    "<C-t>": "action:tabe",
    "<C-w>": "command:wincmd k"
  },
  "lists.disabledLists": [
    "words",
    "lines",
    "locationlist",
    "location"
  ],
  "list.source.mru.excludePatterns": [
    "**/.git/*",
    "/tmp/*",
    "**/vendor/*"
  ],
  "list.source.grep.command": "rg",
  "list.source.grep.args": [
    "-i",
    "--vimgrep",
    "--no-heading",
    "-uu"
  ],
  "list.source.grep.excludePatterns": [
    "**/.git/*",
    "/tmp/*",
    "**/vendor/*"
  ],
  "list.source.files.command": "rg",
  "list.source.files.args": [
    "--hidden",
    "--files",
    "--glob",
    "!.git"
  ],
  "list.source.files.excludePatterns": [
    "**/.git/*",
    "/tmp/*",
    "**/vendor/*"
  ]
}
